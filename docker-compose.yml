services:
  # Flask ML Backend (Primary - Production)
  flask-ml:
    build: .
    container_name: fake-apk-flask
    env_file:
      - .env
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=9000
      - FLASK_DEBUG=false
      - ML_FAKE_THRESHOLD=0.385
      - ML_HEURISTIC_MIN_PROB=0.35
      - PYTHONHASHSEED=42
    ports:
      - "9000:9000"
    volumes:
      - ./artifacts:/app/artifacts
      - ./models:/app/models
    command: python flask_app/main.py
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:9000/', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Development with debug mode
  flask-ml-dev:
    build: .
    container_name: fake-apk-flask-dev
    env_file:
      - .env
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=9001
      - FLASK_DEBUG=true
      - ML_FAKE_THRESHOLD=0.385
      - ML_HEURISTIC_MIN_PROB=0.35
      - PYTHONHASHSEED=42
    ports:
      - "9001:9001"
    volumes:
      - ./artifacts:/app/artifacts
      - ./models:/app/models
      - ./flask_app:/app/flask_app
      - ./ml:/app/ml
    command: python flask_app/main.py
    restart: unless-stopped
    profiles: ["dev"]
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:9001/', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  default:
    name: fake-apk-net
