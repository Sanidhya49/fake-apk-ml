FROM python:3.10-slim

# Set environment variables for Flask production
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    FLASK_HOST=0.0.0.0 \
    FLASK_PORT=9000 \
    FLASK_DEBUG=false \
    FLASK_ENV=production

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    unzip \
    libmagic1 \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r flaskapp && useradd -r -g flaskapp flaskapp

# Copy requirements files
COPY requirements.txt flask_requirements.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r flask_requirements.txt && \
    pip install --no-cache-dir gunicorn==21.2.0

# Copy application code
COPY . .

# Create necessary directories and set permissions
RUN mkdir -p artifacts/static_jsons models logs && \
    chown -R flaskapp:flaskapp /app

# Switch to non-root user
USER flaskapp

EXPOSE 9000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:9000/ || exit 1

# Use Gunicorn for production
CMD ["gunicorn", "--bind", "0.0.0.0:9000", "--workers", "4", "--worker-class", "sync", "--timeout", "300", "--keep-alive", "2", "--max-requests", "1000", "--max-requests-jitter", "100", "--access-logfile", "-", "--error-logfile", "-", "flask_app.main:app"]
